{
    "docs": [
        {
            "location": "/index.html", 
            "text": "简介\n\n\nAndroid支付SDK接口是Bmob为广大开发人员提供的统一、正规的收费手段，让没有企业认证的个人开发者，也能通过支付宝和微信向用户收费。该文档可以让您快速为自己的应用接入Bmob的支付功能。下图为使用支付的流程。\n\n\n\n\n使用需知\n\n\n\b\n使用Bmob支付组件前，请认真阅读\nBmob服务协议\n。\n\n\n对于以下两种情况，开发者需要特别注意：\n\n\n1.违反服务协议，特别是含有以下内容的应用：\n\n\n1）封建迷信和/或淫秽、色情、下流的信息或教唆犯罪的信息；\n\n\n2）博彩有奖、赌博游戏、“私服”、“外挂”等非法互联网出版活动；\n\n\nBmob平台有权进行独立判断并采取技术手段予以删除、屏蔽或断开链接。同时，本平台有权视用户的行为性质，采取包括但不限于暂停或终止服务，限制、冻结或终止本平台网站账号的使用，追究法律责任等措施。\n\n\n2.应用遇到过多的用户投诉，如应用的使用者支付了相关款项，但是该应用却没有提供相应的服务。本平台有权限制或冻结该应用支付收入的所有款项，并保留追究法律责任的权利。\n\n\n3.\nBmob将在每笔交易中收取8%服务费。\n\n\n打款需知\n\n\n1.打款前请先在控制台填写以下信息\n\n\n\n\n2.每月的1、2、16、17号为申请打款时间，15号、月尾日为打款时间，确保用户有半个月的追诉期。\n\n\n支持平台\n\n\n目前安卓的支付支持支付宝和微信支付。\n\n\n启用须知\n\n\n\n\n在Bmob账号管理平台进行身份认证，以保证资金安全，否则无法使用支付等功能。\n\n\n\n\n提交申请时，开发者的联系方式至少要有两种(邮箱，电话，QQ)，方便后续支付弹出的订单页面展示，如下\n\n\n\n\n\n\n\n如有任何疑问或者建议，欢迎加入Bmob支付的技术支持QQ群：273080081(1群)，521591577(2群)\n\n\n\n\n\n\n支付接口快速入门\n\n\n\n\n\n\n添加相关文件\n\n\n1 将下载的支付SDK的libs目录添加到项目下，包括\n和\n，so文件按项目需求添加(这个版本不需要支付宝jar包)\n\n\n2 将下载的支付SDK的assets目录添加到项目下，包括\n和\n，其中bp.db其实是apk文件，是微信支付插件\n\n\n\n\n\n\n在您项目的AndroidManifest.xml中添加以下权限:\n\n\nuses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /\n\n\n\n\n\n\n\n\n修改混淆规则\n\n\n-libraryjars libs/BmobPay_v3.x.x_xxxxxx.jar\n-keepclasseswithmembers class c.b.** { *; }\n-keep interface c.b.PListener{ *; }\n-keep interface c.b.QListener{ *; }\n\n\n\n\n\n\n\n添加下免责Activity(注意这个是在运行时加载的类,可以忽略IDE给出的红色标识)\n\n\nactivity android:name=\"cn.bmob.pay.v3.act.PayAct\" /\n\n\n\n\n\n\n\n\n在您的应用程序主Application的onCreate中调用如下方法：\n  （Application ID在后台应用管理的 数据浏览-\n应用信息-\n应用密钥-\nApplication ID，如果appKey为空或者混淆规则不正确，会抛出IllegalArgumentException异常,因为init是异步的，越早初始化越好）\n\n\nBP.init(\"你的Application ID\");\n\n\n\n注意：新版的支付SDK不能被数据服务SDK的初始化方法取代了，无论您是否使用了Bmob数据服务SDK，都要进行支付SDK的初始化\n\n\n\n\n\n\n发起支付调用，请使用如下方法：\n\n\n/*\n\n     * 第4个参数为true时调用支付宝支付，为false时调用微信支付\n     \n/\n    BP.pay(\"商品名称\", \"商品描述\", 0.02, true, new Plistener(){...});\n\n\n\n\n\n\n在需要调用订单查询的地方，调用如下方法(微信订单和支付宝订单通用)：\n\n\nBP.query(\"订单id\", new QListener(){...});\n\n\n\n\n\n\n\n类库说明\n\n\nc.b.BP\n\n\n\n\nBP.pay(String title, String descript, double money, boolean aliOrWetchat, Plistener listener)\n\n\n\n\n\n\n\n\n\n\n类型\n\n\n名称\n\n\n说明\n\n\n\n\n\n\n\n\n\n\nString\n\n\ntitle\n\n\n商品的名称,请注意不要有违禁字眼,可以为空\n只允许中文、数字、英文和下划线、英文破折号，否则过滤\n\n\n\n\n\n\nString\n\n\ndescript\n\n\n商品的详情描述,请注意不要有违禁字眼,可以为空\n只允许中文、数字、英文和下划线、英文破折号，否则过滤\n\n\n\n\n\n\ndouble\n\n\nprice\n\n\n商品的价格,建议测试用0.02\n\n\n\n\n\n\nboolean\n\n\naliOrWetchat\n\n\n支付方式：true为支付宝支付，false为微信支付\n\n\n\n\n\n\nPlistener\n\n\nlistener\n\n\n支付结果监听类c.b.PListener\n有成功、失败、未知结果、返回订单号等方法\n\n\n\n\n\n\n\n\n注意\n\n\n支付时返回的信息都未必可靠，一切以查询订单返回的信息为准\n\n\n调用微信支付，要安装插件(如果没有安装,会监听器的fail方法会返回-3错误码)，插件在SDK文档的plugin文件夹下，demo有通过assets安装的示例\n\n\n\n\n\nBP.query(String orderId, QListener listener)\n\n\n\n\n\n\n\n\n\n\n类型\n\n\n名称\n\n\n说明\n\n\n\n\n\n\n\n\n\n\nString\n\n\norderId\n\n\n支付订单号,不可为空\n\n\n\n\n\n\nOrderQueryListener\n\n\nlistener\n\n\n查询结果监听类c.b.QListener\n有成功、失败等方法\n\n\n\n\n\n\n\n\n\n\n！！！ForceFree方法已经弃用(开发者需自己控制用户多次点击支付产生多个订单的问题)\n\n\n\n\nForceFree() \n\n\n当上一次支付操作尚未完成时,如果BmobPay对象发起再次请求,PayListener会回调fail方法返回并10777错误码,以免生成多个订单\n\n如果使用过程中出现了阻塞(比如异常强制关闭支付插件页面,会导致一直不能再发起请求，这是小概率事件),则调用此方法进行BmobPay的重置\n\n仅对下一次请求生效,而不是永久消除限制\n\n\n\n\n\n\nc.b.PListener\n\n\n\n\n\n\norderId(String orderId)\n\n\n无论支付成功与否,只要成功产生了请求,就返回订单号,请自行保存以便以后查询\n\n\n\n\n\n\nsucceed()\n\n\n支付成功,保险起见请调用查询方法确认结果\n\n\n\n\n\n\nfail(int code, String reason)\n\n\n支付失败,有可能是用户中断支付,也有可能是网络问题\n返回10777时说明上次操作尚未完成,拒绝多次请求以免生成多个订单(可用BP.ForceFree()方法强制取消一次限制)\n支付宝支付时6001为用户主动中断支付操作\n微信支付返回-2时为用户主动中断操作,返回-3为未安装Bmob支付插件.apk\n(如果多次出现异常请向Bmob工作人员反馈)\n\n\n\n\n\n\nunknow()\n\n\n因为网络等问题,不能确认是否支付成功,请稍后手动查询(小概率事件)\n\n\n\n\n\n\nc.b.QListener\n\n\n\n\n\n\nsucceed(String status)\n\n\n查询成功(并不是说支付成功),返回的status有NOTPAY和SUCCESS两种可能\n\n\n\n\n\n\nfail(int code, String reason)\n\n\n查询失败,有可能是网络问题,也有可能是订单号错误\n\n\n\n\n\n\n支付服务\n\n\n关于如何使用支付功能，请查看 \nAndroid支付SDK\n 或 \niOS支付SDK\n。RestAPI目前只提供了查询订单的功能。\n\n\n查询订单\n\n\ncurl -X GET \\\n-H \"X-Bmob-Application-Id: Your Application ID\" \\\n-H \"X-Bmob-REST-API-Key: Your REST API Key\" \\\nhttps://api.bmob.cn/1/pay/Bmob系统生成的订单号\n\n\n\n成功返回以下JSON, 失败时返回请看 \n支付功能相关错误码\n\n\n{\n\"name\": \"商品\",\n\"body\": \"商品详情\",\n\"create_time\": \"2015-03-24 11:14:58\",\n\"out_trade_no\": \"9f392618f449a71c6fcfdee38d2b29e4\",\n\"transaction_id\": \"2015061100001000330057820379\"\n\"pay_type\": \"WECHATPAY\",\n\"total_fee\": 0.01,\n\"trade_state\": \"NOTPAY\"\n}\n\n\n\n返回的信息简单描述如下：\n\n\n\n\nname           : 订单或商品名称 \n\n\nbody-商品详情\n\n\ncreate_time    : 调起支付的时间\n\n\nout_trade_no   : Bmob系统的订单号\n\n\ntransaction_id : 微信或支付宝的系统订单号\n\n\npay_type       : WECHATPAY（微信支付）或ALIPAY（支付宝支付）\n\n\ntotal_fee      : 订单总金额\n\n\ntrade_state    : NOTPAY（未支付）或 SUCCESS（支付成功）\n\n\n\n\n支付回调\n\n\n如图，可以在支付-配置信息处填入通知url。\n\n\n\n\n这样在支付成功后会向该url（SDK使用异步通知URL，PHP等调用网页支付的使用同步返回URL）发送post请求，结构如下：\n\n\n{\n    \ntrade_status\n:\n1\n,\n    \nout_trade_no\n:\n809488d695ed42ec56b57546d2df94cc\n,\n    \ntrade_no\n:\n2016033021001004810225607152\n\n}\n\n\n\n\ntrade_status：表示支付状态，目前只有支付成功才产生回调，值恒为1.\nout_trade_no：Bmob返回的订单号\ntrade_no：支付宝或微信返回的订单号\n\n\n新版支付v3.1.1(20170111)的更新提示\n\n\n\n\nForceFree方法已经弃用，开发者需自己控制用户多次点击支付产生多个订单的问题\n\n\n这一版本的SDK将会在支付的过程中呈现一个中间页面，这个页面负责引导用户的支付流程，带来的影响是：\n    1)可以不用在pay的回调里调用BP.query进行查询，因为这个页面会确定用户的支付结果(试用demo.apk进行体验)\n    2)可以不用在你自己的app内提供责任说明的页面\n\n\n支付宝支付需要用户手机已经安装支付宝，微信支付仍然需要安装插件\n\n\n市面上还流传小部分内存很吃紧的老款手机，在打开支付宝或者微信的时候可能导致你自己的app被系统杀掉，这种情况可以通过在后台填写\n支付结果的异步通知URL\n解决，结合云端代码来使用(详情见云端代码文档)\n\n\n不用再针对小米手机获取订单时9015的问题添加额外的代码，微信支付插件不用网络权限，但在部分手机可能还是需要用户手动开启\n允许微信支付插件被其它app调起\n的权限\n\n\n新版支付SDK对Unity支持的解决方法:\n\n\n新版支付SDK需要so文件，Unity3d开发者如果没有处理过类似情况，可以这样做：\n\n\n将SDK中libs文件夹下，除了/armeabi、/armeabi-v7a、x86以外的文件夹删掉(jar文件需要保留)，然后把libs文件夹放在Plugins/Android/下。也就是最后会有 Plugins/Android/libs/armeabi/bmobwpay.so文件\n\n\n\n\n\n\n\n\n其他\n\n\n\n\n\n\n混淆规则如下: \n\n\n-libraryjars libs/BmobPay_v3.x.x_xxxxxx.jar\n-keepclasseswithmembers class c.b.** { *; }\n-keep interface c.b.PListener{ *; }\n-keep interface c.b.QListener{ *; }\n\n\n\n\n\n\n\n在\nBmob财务管理平台\n订单管理处，金额从小数点后第三位开始不显示，比如支付了0.01元实收0.00，其实是0.0095\n\n\n\n\n如果用户的手机有“应用锁”功能（即点击应用后跳出系统设定的解锁界面，如小米、360、腾讯管家都可能有该功能），则可能会导致支付中断（支付宝返回6001，微信返回-2），这是微信和支付宝SDK出于安全考虑设置的，请建议用户出现该问题时先关掉支付宝钱包或微信的应用锁\n\n\n由于微信SDK的限制，无法判断微信是否已登陆用户，\n如果未登陆用户，监听器的fail方法可能不被调用\n，请开发者们提醒自己的用户确保微信已登陆\n\n\n如果支付宝已经选定了支付用的账户（或银行卡），但是支付失败，用户的支付宝账号会保留该订单，有可能从支付宝官网、支付宝钱包APP再次发起支付，在开发过程中请注意这种事情的处理情况\n\n\n如果请求支付的页面为横屏，微信支付页面可能出现抽风现象（卡顿甚至重启），是因为微信出现莫名Bug不停开启新支付页面导致内存爆满，解决方法：在AndroidManifest.xml中将com.bmob.pay.tool.PayActivity设为强制竖屏（上方有示例），并尽可能将自己调用的Activity也设置为竖屏", 
            "title": "开发文档"
        }, 
        {
            "location": "/index.html#_1", 
            "text": "Android支付SDK接口是Bmob为广大开发人员提供的统一、正规的收费手段，让没有企业认证的个人开发者，也能通过支付宝和微信向用户收费。该文档可以让您快速为自己的应用接入Bmob的支付功能。下图为使用支付的流程。", 
            "title": "简介"
        }, 
        {
            "location": "/index.html#_2", 
            "text": "\b\n使用Bmob支付组件前，请认真阅读 Bmob服务协议 。  对于以下两种情况，开发者需要特别注意：  1.违反服务协议，特别是含有以下内容的应用：  1）封建迷信和/或淫秽、色情、下流的信息或教唆犯罪的信息；  2）博彩有奖、赌博游戏、“私服”、“外挂”等非法互联网出版活动；  Bmob平台有权进行独立判断并采取技术手段予以删除、屏蔽或断开链接。同时，本平台有权视用户的行为性质，采取包括但不限于暂停或终止服务，限制、冻结或终止本平台网站账号的使用，追究法律责任等措施。  2.应用遇到过多的用户投诉，如应用的使用者支付了相关款项，但是该应用却没有提供相应的服务。本平台有权限制或冻结该应用支付收入的所有款项，并保留追究法律责任的权利。  3. Bmob将在每笔交易中收取8%服务费。", 
            "title": "使用需知"
        }, 
        {
            "location": "/index.html#_3", 
            "text": "1.打款前请先在控制台填写以下信息   2.每月的1、2、16、17号为申请打款时间，15号、月尾日为打款时间，确保用户有半个月的追诉期。", 
            "title": "打款需知"
        }, 
        {
            "location": "/index.html#_4", 
            "text": "目前安卓的支付支持支付宝和微信支付。", 
            "title": "支持平台"
        }, 
        {
            "location": "/index.html#_5", 
            "text": "在Bmob账号管理平台进行身份认证，以保证资金安全，否则无法使用支付等功能。   提交申请时，开发者的联系方式至少要有两种(邮箱，电话，QQ)，方便后续支付弹出的订单页面展示，如下    如有任何疑问或者建议，欢迎加入Bmob支付的技术支持QQ群：273080081(1群)，521591577(2群)", 
            "title": "启用须知"
        }, 
        {
            "location": "/index.html#_6", 
            "text": "添加相关文件  1 将下载的支付SDK的libs目录添加到项目下，包括 和 ，so文件按项目需求添加(这个版本不需要支付宝jar包)  2 将下载的支付SDK的assets目录添加到项目下，包括 和 ，其中bp.db其实是apk文件，是微信支付插件    在您项目的AndroidManifest.xml中添加以下权限:  uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /     修改混淆规则  -libraryjars libs/BmobPay_v3.x.x_xxxxxx.jar\n-keepclasseswithmembers class c.b.** { *; }\n-keep interface c.b.PListener{ *; }\n-keep interface c.b.QListener{ *; }    添加下免责Activity(注意这个是在运行时加载的类,可以忽略IDE给出的红色标识)  activity android:name=\"cn.bmob.pay.v3.act.PayAct\" /     在您的应用程序主Application的onCreate中调用如下方法：\n  （Application ID在后台应用管理的 数据浏览- 应用信息- 应用密钥- Application ID，如果appKey为空或者混淆规则不正确，会抛出IllegalArgumentException异常,因为init是异步的，越早初始化越好）  BP.init(\"你的Application ID\");  注意：新版的支付SDK不能被数据服务SDK的初始化方法取代了，无论您是否使用了Bmob数据服务SDK，都要进行支付SDK的初始化    发起支付调用，请使用如下方法：  /* \n     * 第4个参数为true时调用支付宝支付，为false时调用微信支付\n      /\n    BP.pay(\"商品名称\", \"商品描述\", 0.02, true, new Plistener(){...});    在需要调用订单查询的地方，调用如下方法(微信订单和支付宝订单通用)：  BP.query(\"订单id\", new QListener(){...});", 
            "title": "支付接口快速入门"
        }, 
        {
            "location": "/index.html#_7", 
            "text": "c.b.BP   BP.pay(String title, String descript, double money, boolean aliOrWetchat, Plistener listener)      类型  名称  说明      String  title  商品的名称,请注意不要有违禁字眼,可以为空 只允许中文、数字、英文和下划线、英文破折号，否则过滤    String  descript  商品的详情描述,请注意不要有违禁字眼,可以为空 只允许中文、数字、英文和下划线、英文破折号，否则过滤    double  price  商品的价格,建议测试用0.02    boolean  aliOrWetchat  支付方式：true为支付宝支付，false为微信支付    Plistener  listener  支付结果监听类c.b.PListener 有成功、失败、未知结果、返回订单号等方法     注意  支付时返回的信息都未必可靠，一切以查询订单返回的信息为准  调用微信支付，要安装插件(如果没有安装,会监听器的fail方法会返回-3错误码)，插件在SDK文档的plugin文件夹下，demo有通过assets安装的示例   BP.query(String orderId, QListener listener)      类型  名称  说明      String  orderId  支付订单号,不可为空    OrderQueryListener  listener  查询结果监听类c.b.QListener 有成功、失败等方法      ！！！ForceFree方法已经弃用(开发者需自己控制用户多次点击支付产生多个订单的问题)   ForceFree()   当上一次支付操作尚未完成时,如果BmobPay对象发起再次请求,PayListener会回调fail方法返回并10777错误码,以免生成多个订单 \n如果使用过程中出现了阻塞(比如异常强制关闭支付插件页面,会导致一直不能再发起请求，这是小概率事件),则调用此方法进行BmobPay的重置 \n仅对下一次请求生效,而不是永久消除限制    c.b.PListener    orderId(String orderId)  无论支付成功与否,只要成功产生了请求,就返回订单号,请自行保存以便以后查询    succeed()  支付成功,保险起见请调用查询方法确认结果    fail(int code, String reason)  支付失败,有可能是用户中断支付,也有可能是网络问题 返回10777时说明上次操作尚未完成,拒绝多次请求以免生成多个订单(可用BP.ForceFree()方法强制取消一次限制) 支付宝支付时6001为用户主动中断支付操作 微信支付返回-2时为用户主动中断操作,返回-3为未安装Bmob支付插件.apk (如果多次出现异常请向Bmob工作人员反馈)    unknow()  因为网络等问题,不能确认是否支付成功,请稍后手动查询(小概率事件)    c.b.QListener    succeed(String status)  查询成功(并不是说支付成功),返回的status有NOTPAY和SUCCESS两种可能    fail(int code, String reason)  查询失败,有可能是网络问题,也有可能是订单号错误", 
            "title": "类库说明"
        }, 
        {
            "location": "/index.html#_8", 
            "text": "关于如何使用支付功能，请查看  Android支付SDK  或  iOS支付SDK 。RestAPI目前只提供了查询订单的功能。", 
            "title": "支付服务"
        }, 
        {
            "location": "/index.html#_9", 
            "text": "curl -X GET \\\n-H \"X-Bmob-Application-Id: Your Application ID\" \\\n-H \"X-Bmob-REST-API-Key: Your REST API Key\" \\\nhttps://api.bmob.cn/1/pay/Bmob系统生成的订单号  成功返回以下JSON, 失败时返回请看  支付功能相关错误码  {\n\"name\": \"商品\",\n\"body\": \"商品详情\",\n\"create_time\": \"2015-03-24 11:14:58\",\n\"out_trade_no\": \"9f392618f449a71c6fcfdee38d2b29e4\",\n\"transaction_id\": \"2015061100001000330057820379\"\n\"pay_type\": \"WECHATPAY\",\n\"total_fee\": 0.01,\n\"trade_state\": \"NOTPAY\"\n}  返回的信息简单描述如下：   name           : 订单或商品名称   body-商品详情  create_time    : 调起支付的时间  out_trade_no   : Bmob系统的订单号  transaction_id : 微信或支付宝的系统订单号  pay_type       : WECHATPAY（微信支付）或ALIPAY（支付宝支付）  total_fee      : 订单总金额  trade_state    : NOTPAY（未支付）或 SUCCESS（支付成功）", 
            "title": "查询订单"
        }, 
        {
            "location": "/index.html#_10", 
            "text": "如图，可以在支付-配置信息处填入通知url。   这样在支付成功后会向该url（SDK使用异步通知URL，PHP等调用网页支付的使用同步返回URL）发送post请求，结构如下：  {\n     trade_status : 1 ,\n     out_trade_no : 809488d695ed42ec56b57546d2df94cc ,\n     trade_no : 2016033021001004810225607152 \n}  trade_status：表示支付状态，目前只有支付成功才产生回调，值恒为1.\nout_trade_no：Bmob返回的订单号\ntrade_no：支付宝或微信返回的订单号", 
            "title": "支付回调"
        }, 
        {
            "location": "/index.html#v31120170111", 
            "text": "ForceFree方法已经弃用，开发者需自己控制用户多次点击支付产生多个订单的问题  这一版本的SDK将会在支付的过程中呈现一个中间页面，这个页面负责引导用户的支付流程，带来的影响是：\n    1)可以不用在pay的回调里调用BP.query进行查询，因为这个页面会确定用户的支付结果(试用demo.apk进行体验)\n    2)可以不用在你自己的app内提供责任说明的页面  支付宝支付需要用户手机已经安装支付宝，微信支付仍然需要安装插件  市面上还流传小部分内存很吃紧的老款手机，在打开支付宝或者微信的时候可能导致你自己的app被系统杀掉，这种情况可以通过在后台填写 支付结果的异步通知URL 解决，结合云端代码来使用(详情见云端代码文档)  不用再针对小米手机获取订单时9015的问题添加额外的代码，微信支付插件不用网络权限，但在部分手机可能还是需要用户手动开启 允许微信支付插件被其它app调起 的权限  新版支付SDK对Unity支持的解决方法:  新版支付SDK需要so文件，Unity3d开发者如果没有处理过类似情况，可以这样做：  将SDK中libs文件夹下，除了/armeabi、/armeabi-v7a、x86以外的文件夹删掉(jar文件需要保留)，然后把libs文件夹放在Plugins/Android/下。也就是最后会有 Plugins/Android/libs/armeabi/bmobwpay.so文件", 
            "title": "新版支付v3.1.1(20170111)的更新提示"
        }, 
        {
            "location": "/index.html#_11", 
            "text": "混淆规则如下:   -libraryjars libs/BmobPay_v3.x.x_xxxxxx.jar\n-keepclasseswithmembers class c.b.** { *; }\n-keep interface c.b.PListener{ *; }\n-keep interface c.b.QListener{ *; }    在 Bmob财务管理平台 订单管理处，金额从小数点后第三位开始不显示，比如支付了0.01元实收0.00，其实是0.0095   如果用户的手机有“应用锁”功能（即点击应用后跳出系统设定的解锁界面，如小米、360、腾讯管家都可能有该功能），则可能会导致支付中断（支付宝返回6001，微信返回-2），这是微信和支付宝SDK出于安全考虑设置的，请建议用户出现该问题时先关掉支付宝钱包或微信的应用锁  由于微信SDK的限制，无法判断微信是否已登陆用户， 如果未登陆用户，监听器的fail方法可能不被调用 ，请开发者们提醒自己的用户确保微信已登陆  如果支付宝已经选定了支付用的账户（或银行卡），但是支付失败，用户的支付宝账号会保留该订单，有可能从支付宝官网、支付宝钱包APP再次发起支付，在开发过程中请注意这种事情的处理情况  如果请求支付的页面为横屏，微信支付页面可能出现抽风现象（卡顿甚至重启），是因为微信出现莫名Bug不停开启新支付页面导致内存爆满，解决方法：在AndroidManifest.xml中将com.bmob.pay.tool.PayActivity设为强制竖屏（上方有示例），并尽可能将自己调用的Activity也设置为竖屏", 
            "title": "其他"
        }, 
        {
            "location": "/module/example/README/index.html", 
            "text": "示例和功能\n\n\nandroid及iOS的demo在相应SDK压缩包里一起提供\nhttp://www.bmob.cn/downloads", 
            "title": "示例和功能"
        }, 
        {
            "location": "/module/example/README/index.html#_1", 
            "text": "android及iOS的demo在相应SDK压缩包里一起提供 http://www.bmob.cn/downloads", 
            "title": "示例和功能"
        }, 
        {
            "location": "/module/class_doc/README/index.html", 
            "text": "类库文档\n\n\n支付SDK类库文档：\nhttp://docs.bmob.cn/pay/Android/i_doc/doc/index.html", 
            "title": "类库文档"
        }, 
        {
            "location": "/module/class_doc/README/index.html#_1", 
            "text": "支付SDK类库文档： http://docs.bmob.cn/pay/Android/i_doc/doc/index.html", 
            "title": "类库文档"
        }, 
        {
            "location": "/module/update_log/README/index.html", 
            "text": "v3.1.1   2017年1月11日\n\n\n1.需要在AndroidManifest.xml添加声明一个Activity(cn.bmob.pay.v3.act.PayAct)\n2.需要添加so文件、更换jar文件、往assets文件夹放一个payassets.db文件\n3.恢复了对支付宝支付的支持(不需添加支付sdk，要求用户手机已安装支付宝客户端)\n4.网络请求过程不再放在插件，不会再因为插件无法请求网络导致出现9015、9016的错误，不会再出现不回调订单的错误\n5.取消10077(重复提交订单)的错误，不再提供ForceFree方法，由开发者自己控制好，避免短时间内频繁生成订单\n6.责任声明的页面由sdk统一提供了，开发者可以不再展示该声明(试用demo可体验)\n7.初始化方法参数无需传入Context\n8.初始化方法变成异步的，最好放在Application的onCreate方法内\n9.回调fail时，部分编译阶段的错误码对应的文字换成了中文的，以便快速排查问题，如果有编码问题请及时反馈\n\n\nv3.0.3   2016年6月21日\n\n\n1.请勿将支付sdk用于违规途径,一经发现,本平台可在不通知开发者的情况下紧急封禁账号以避免损失;\n2.支付宝支付和微信支付都需要使用支付插件(本目录下的’BmobPayPlugin.apk’),请确保有读写SD卡权限;\n3.如果担心插件被应用市场扫描出带有支付功能,可将插件通过加密或下载的方式隐藏起来;\n4.混淆规则如下:\n-libraryjars libs/xxx.jar(替换jar包名)\n-keepclasseswithmembers class c.b.\n { \n; }\n-keep interface c.b.PListener{ \n; }\n-keep interface c.b.QListener{ *; }\n\n\nv3.0.2   2016年5月31日\n\n\n1.将过长字符串通过getResourceAsStream方式加载,兼容部分旧的编译器\n2.更新了混淆规则,详细内容见文档\n3.支付插件的名字统一为\"安全支付控件\"\n\n\nv3.0.1   2016年5月30日\n\n\n1.提供关闭Service的接口，BP.ForceExit();\n2.修复102(安全认证)的问题\n3.将插件上的支付宝sdk升级到最新版\n4.支付插件改名为\"BPay安全控件\"\n5.Demo中添加了检查支付插件版本并更新的示例\n\n\nv3.0   2016年5月27日\n\n\n1.请勿将支付sdk用于违规途径,一经发现,本平台可在不通知开发者的情况下紧急封禁账号以避免损失;\n2.支付宝支付和微信支付都需要使用支付插件(本目录下的’BmobPlugin.apk’),请确保有读写SD卡权限;\n3.如果担心插件被应用市场扫描出带有支付功能,可将插件通过加密或下载的方式隐藏起来;\n4.混淆规则如下:\n-keep class c.b.BP\n-keep class c.b.PListener\n-keep class c.b.QListener\n-keepclasseswithmembers class c.b.BP{ \n; }\n-keepclasseswithmembers class * implements c.b.PListener{ \n; }\n-keepclasseswithmembers class * implements c.b.QListener{ *; }\n\n\nv2.7   2016年4月27日\n\n\n修复了Unity项目初始化时提示混淆失败的问题(在Assets/Android/assets下添加了s.db和j.db文件)\n\n\nv2.6   2016年4月11日\n\n\nBmobPay更新：\n1.修复了部分旧版混淆工具混淆失败的问题；\n2.处理了在非主线程初始化sdk失败的问题；\n3.提高了加载效率；\n4.sdk版本号为7\n微信支付插件更新：\n1.修复了未登录用户回调失败的问题；\n2.隐藏了中转页面；\n3.插件版本号改为4，可通过支付sdk的BP.getPluginVersion判断更新\n\n\nv2.5   2016年3月24日\n\n\n1、兼容armeabi、armeabi-v7a、arm64-v8a、x86、x86_64、mips等CPU指令集 2、修复某些特殊机型会崩溃的问题 3、修复已知Bug \n\n\nv2.4   2016年1月25日\n\n\n1.兼容64位机器，如果发现还有不兼容的机型请联系客服\n\n\nv2.3   2016年1月23日\n\n\n1.取消so文件\n2.提高sdk兼容性\n3.Unity添加安装微信支付插件功能(需更新so文件和jar文件,并提供cs文件参考)\n4.提示语优化\n5.混淆规则在demo的proguard-project.txt文件有示例\n\n\nv2.1   2016年1月18日\n\n\n1.支持Unity调用并提供了教程和示例代码,不懂Android也可以快速接入\n2.so文件缩小一半,更加轻量\n3.安全性大大提升\n4.推荐将插件后缀名改为db等,更容易上应用市场\n\n\nv2.0   2016年1月13日\n\n\n2.0版本与之前的版本有较大区别，不向下兼容。\n主要更新内容如下：\n1.去除SDK中Pay关键字\n2.添加两个新的Activity需要在AndroidManifest文件中注册。(旧版已注册的Activity可删除)\n3.类名改动，详细见支付文档说明。\n4.混淆改动，详细见支付文档说明。\n\n\nv1.0.3   2015年10月20日\n\n\n1.支付宝sdk更新:     \n    1)默认用主线程调用调用支付;     \n    2)更新支付宝官方sdk,从3个jar包改成1个jar包;     \n    3)版本号更新为3; \n2.微信支付插件:     \n    1)微信支付插件无更新; \n3.支付Demo更新:     \n    1)支付宝支付sdk更新成官方最新版;     \n    2)Dialog的调用增加了异常捕捉; \n\n\nv1.0.2a   2015年7月09日\n\n\n1.微信支付插件更新：\n    1）在近期任务中不可见\n    2）兼容微信的新Bug\n    3）状态栏（TitleBar）设为不可见\n    4）版本号更新为3\n2.支付 Sdk无更新\nPS：如果请求支付的页面为横屏，微信支付页面可能出现抽风现象（卡顿甚至重启），是因为微信出现莫名Bug不停开启新支付页面导致内存爆满，解决方法：在AndroidManifest.xml中将com.bmob.pay.tool.PayActivity设为强制竖屏（上方有示例），并尽可能将自己调用的Activity也设置为竖屏\n支付Sdk版本号 : 2\n微信支付插件版本号 : 3\n\n\nv1.0.2   2015年5月12日\n\n\n支付Sdk更新： \n1.BmobPay下增加了静态方法getPluginVersion，用于查看微信插件的版本号（当前版本为2），可按需更新； \n2.BmobPay下增加了静态方法getPaySdkVersion，用于查看Bmob支付Sdk的版本号（当前版本为2）； 微信支付插件更新： 修复了部分用户在未安装微信时调用微信支付未回调fail的Bug \n支付Sdk版本号 : 2 \n微信支付插件版本号 : 2 \n\n\nV1.0.1a   2015年4月14日\n\n\n支付宝官方的sdk有更新，Bmob的支付sdk无更新 \n支付宝sdk更新信息如下：     \n安卓版本号：v2.2.1    \n修改时间：2015-03-31    \n安卓更新点：修正部分机型横屏下安全输入法兼容问题，改成强制竖屏     \n          \n\n\nV1.0.1   2015年4月10日\n\n\n1.修复了商品名、描述字符串非法导致支付宝报ALI64的问题                              \n2.修复了防止多次提交订单时的锁只对下一次有效的BUG                                        3.优化了微信支付插件的Logo \n\n\nV1.0.0   2015年4月08日\n\n\n1、调用支付宝、微信支付的支付以及查询功能完成\n2、添加支付成功、失败、返回订单号等监听事件；\n3、更改支付宝支付、查询订单时无需安装插件，微信支付需要安装插件", 
            "title": "更新日志"
        }, 
        {
            "location": "/module/update_log/README/index.html#v311-2017111", 
            "text": "1.需要在AndroidManifest.xml添加声明一个Activity(cn.bmob.pay.v3.act.PayAct)\n2.需要添加so文件、更换jar文件、往assets文件夹放一个payassets.db文件\n3.恢复了对支付宝支付的支持(不需添加支付sdk，要求用户手机已安装支付宝客户端)\n4.网络请求过程不再放在插件，不会再因为插件无法请求网络导致出现9015、9016的错误，不会再出现不回调订单的错误\n5.取消10077(重复提交订单)的错误，不再提供ForceFree方法，由开发者自己控制好，避免短时间内频繁生成订单\n6.责任声明的页面由sdk统一提供了，开发者可以不再展示该声明(试用demo可体验)\n7.初始化方法参数无需传入Context\n8.初始化方法变成异步的，最好放在Application的onCreate方法内\n9.回调fail时，部分编译阶段的错误码对应的文字换成了中文的，以便快速排查问题，如果有编码问题请及时反馈", 
            "title": "v3.1.1   2017年1月11日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v303-2016621", 
            "text": "1.请勿将支付sdk用于违规途径,一经发现,本平台可在不通知开发者的情况下紧急封禁账号以避免损失;\n2.支付宝支付和微信支付都需要使用支付插件(本目录下的’BmobPayPlugin.apk’),请确保有读写SD卡权限;\n3.如果担心插件被应用市场扫描出带有支付功能,可将插件通过加密或下载的方式隐藏起来;\n4.混淆规则如下:\n-libraryjars libs/xxx.jar(替换jar包名)\n-keepclasseswithmembers class c.b.  {  ; }\n-keep interface c.b.PListener{  ; }\n-keep interface c.b.QListener{ *; }", 
            "title": "v3.0.3   2016年6月21日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v302-2016531", 
            "text": "1.将过长字符串通过getResourceAsStream方式加载,兼容部分旧的编译器\n2.更新了混淆规则,详细内容见文档\n3.支付插件的名字统一为\"安全支付控件\"", 
            "title": "v3.0.2   2016年5月31日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v301-2016530", 
            "text": "1.提供关闭Service的接口，BP.ForceExit();\n2.修复102(安全认证)的问题\n3.将插件上的支付宝sdk升级到最新版\n4.支付插件改名为\"BPay安全控件\"\n5.Demo中添加了检查支付插件版本并更新的示例", 
            "title": "v3.0.1   2016年5月30日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v30-2016527", 
            "text": "1.请勿将支付sdk用于违规途径,一经发现,本平台可在不通知开发者的情况下紧急封禁账号以避免损失;\n2.支付宝支付和微信支付都需要使用支付插件(本目录下的’BmobPlugin.apk’),请确保有读写SD卡权限;\n3.如果担心插件被应用市场扫描出带有支付功能,可将插件通过加密或下载的方式隐藏起来;\n4.混淆规则如下:\n-keep class c.b.BP\n-keep class c.b.PListener\n-keep class c.b.QListener\n-keepclasseswithmembers class c.b.BP{  ; }\n-keepclasseswithmembers class * implements c.b.PListener{  ; }\n-keepclasseswithmembers class * implements c.b.QListener{ *; }", 
            "title": "v3.0   2016年5月27日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v27-2016427", 
            "text": "修复了Unity项目初始化时提示混淆失败的问题(在Assets/Android/assets下添加了s.db和j.db文件)", 
            "title": "v2.7   2016年4月27日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v26-2016411", 
            "text": "BmobPay更新：\n1.修复了部分旧版混淆工具混淆失败的问题；\n2.处理了在非主线程初始化sdk失败的问题；\n3.提高了加载效率；\n4.sdk版本号为7\n微信支付插件更新：\n1.修复了未登录用户回调失败的问题；\n2.隐藏了中转页面；\n3.插件版本号改为4，可通过支付sdk的BP.getPluginVersion判断更新", 
            "title": "v2.6   2016年4月11日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v25-2016324", 
            "text": "1、兼容armeabi、armeabi-v7a、arm64-v8a、x86、x86_64、mips等CPU指令集 2、修复某些特殊机型会崩溃的问题 3、修复已知Bug", 
            "title": "v2.5   2016年3月24日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v24-2016125", 
            "text": "1.兼容64位机器，如果发现还有不兼容的机型请联系客服", 
            "title": "v2.4   2016年1月25日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v23-2016123", 
            "text": "1.取消so文件\n2.提高sdk兼容性\n3.Unity添加安装微信支付插件功能(需更新so文件和jar文件,并提供cs文件参考)\n4.提示语优化\n5.混淆规则在demo的proguard-project.txt文件有示例", 
            "title": "v2.3   2016年1月23日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v21-2016118", 
            "text": "1.支持Unity调用并提供了教程和示例代码,不懂Android也可以快速接入\n2.so文件缩小一半,更加轻量\n3.安全性大大提升\n4.推荐将插件后缀名改为db等,更容易上应用市场", 
            "title": "v2.1   2016年1月18日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v20-2016113", 
            "text": "2.0版本与之前的版本有较大区别，不向下兼容。\n主要更新内容如下：\n1.去除SDK中Pay关键字\n2.添加两个新的Activity需要在AndroidManifest文件中注册。(旧版已注册的Activity可删除)\n3.类名改动，详细见支付文档说明。\n4.混淆改动，详细见支付文档说明。", 
            "title": "v2.0   2016年1月13日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v103-20151020", 
            "text": "1.支付宝sdk更新:     \n    1)默认用主线程调用调用支付;     \n    2)更新支付宝官方sdk,从3个jar包改成1个jar包;     \n    3)版本号更新为3; \n2.微信支付插件:     \n    1)微信支付插件无更新; \n3.支付Demo更新:     \n    1)支付宝支付sdk更新成官方最新版;     \n    2)Dialog的调用增加了异常捕捉;", 
            "title": "v1.0.3   2015年10月20日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v102a-2015709", 
            "text": "1.微信支付插件更新：\n    1）在近期任务中不可见\n    2）兼容微信的新Bug\n    3）状态栏（TitleBar）设为不可见\n    4）版本号更新为3\n2.支付 Sdk无更新\nPS：如果请求支付的页面为横屏，微信支付页面可能出现抽风现象（卡顿甚至重启），是因为微信出现莫名Bug不停开启新支付页面导致内存爆满，解决方法：在AndroidManifest.xml中将com.bmob.pay.tool.PayActivity设为强制竖屏（上方有示例），并尽可能将自己调用的Activity也设置为竖屏\n支付Sdk版本号 : 2\n微信支付插件版本号 : 3", 
            "title": "v1.0.2a   2015年7月09日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v102-2015512", 
            "text": "支付Sdk更新： \n1.BmobPay下增加了静态方法getPluginVersion，用于查看微信插件的版本号（当前版本为2），可按需更新； \n2.BmobPay下增加了静态方法getPaySdkVersion，用于查看Bmob支付Sdk的版本号（当前版本为2）； 微信支付插件更新： 修复了部分用户在未安装微信时调用微信支付未回调fail的Bug \n支付Sdk版本号 : 2 \n微信支付插件版本号 : 2", 
            "title": "v1.0.2   2015年5月12日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v101a-2015414", 
            "text": "支付宝官方的sdk有更新，Bmob的支付sdk无更新 \n支付宝sdk更新信息如下：     \n安卓版本号：v2.2.1    \n修改时间：2015-03-31    \n安卓更新点：修正部分机型横屏下安全输入法兼容问题，改成强制竖屏", 
            "title": "V1.0.1a   2015年4月14日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v101-2015410", 
            "text": "1.修复了商品名、描述字符串非法导致支付宝报ALI64的问题                              \n2.修复了防止多次提交订单时的锁只对下一次有效的BUG                                        3.优化了微信支付插件的Logo", 
            "title": "V1.0.1   2015年4月10日"
        }, 
        {
            "location": "/module/update_log/README/index.html#v100-2015408", 
            "text": "1、调用支付宝、微信支付的支付以及查询功能完成\n2、添加支付成功、失败、返回订单号等监听事件；\n3、更改支付宝支付、查询订单时无需安装插件，微信支付需要安装插件", 
            "title": "V1.0.0   2015年4月08日"
        }
    ]
}