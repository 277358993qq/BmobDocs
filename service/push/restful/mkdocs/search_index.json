{
    "docs": [
        {
            "location": "/index.html", 
            "text": "消息推送简介\n\n\n推送通知是让用户及时被通知、和你的应用保持联系的一种非常棒的方式，你可以快速而有效地通知到所有的用户，下面这个教程将会教你如何使用Bmob来推送消息。\n\n\n安装消息推送服务\n\n\n每一个Bmob的App被安装在用户的设备上后，如果要使用消息推送功能，Bmob SDK会自动生成一个Installation对象。Installation对象包含了推送所需要的所有信息。举例：一个棒球的App，你可以让用户订阅感兴趣的棒球队，然后及时将这个球队的消息推送给用户 。\n你可以使用 REST API，通过请求URL \n/1/installations\n 对Installation对象进行一系列操作，就像你存储和获取其他的普通对象，如GameScore对象一样。\n注意Installation对象一般只在Client SDK中进行修改，但REST API对于大量导入或导出订阅数据的Installation对象是极其有用的。\n\n\nInstallation对象有几个系统默认的特殊字段来帮助你进行定位到设备等管理：\n- \nbadge\n : iOS应用中右上角的图标标识，这不会在服务端进行自增，需要开发者自己实现自增统计\n- \nchannels\n : 当前这个设备订阅的渠道名称数组\n- \ntimeZone\n : 设备所在位置的时区， 如Asia/Shanghai，这个会在每个Installation对象更新时同步（只读）\n- \ndeviceType\n : 设备的类型, 值为：\"ios\" 或 \"android\" (只读)\n- \ninstallationId\n : Bmob使用的设备唯一号，Android设备是必须的，iOS可选 (只读)\n- \ndeviceToken\n : iOS设备由Apple APNS生成的唯一性token标识 (只读)\n- \nnotificationUri\n : Windows Phone设备由Windows Push Center生成的唯一性token标识\n\n\n保存 installation\n\n\n根据设备的不同往设备表中添加不同的值，body格式如下\n\n\n{\n  \ndeviceType\n: deviceType (\niOS\n,\nandroid\n, \nwindows phone\n)\n  \ndeviceToken\n: iOS需填\n  \ninstallationId\n:android需填\n  \nnotificationUri\n:wp需填\n}\n\n\n\n\n下面将针对具体平台分别举例。\n\n\n保存iOS设备的deviceToken\n\n\niOS设备通常使用deviceToken来对一台设备进行惟一标识。\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \ndeviceType\n: \nios\n,\n        \ndeviceToken\n: \nabcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789\n\n      }' \\\n  https://api.bmob.cn/1/installations\n\n\n\n\n保存Android设备的 installationId\n\n\n对于Android设备，\nBmob\nSDK会自动生成uuid作为installationId保存到 Bmob。 你可以使用以下REST API保存Android设备的installation ID。\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \ndeviceType\n: \nandroid\n,\n        \ninstallationId\n: \n12345678-4312-1234-1234-1234567890ab\n\n      }' \\\n  https://api.bmob.cn/1/installations\n\n\n\n\n保存Windows Phone设备的 notificationUri\n\n\n对于Windows Phone设备，\nBmob\nSDK会自动从Windows Push Center获取到notificationUri并保存到 Bmob。 你可以使用以下REST API保存Windows Phone设备的notificationUri。\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \ndeviceType\n: \nwindows phone\n,\n        \nnotificationUri\n: \nhttps://hk1.notify.live.net/unthrottledthirdparty/01.00/AQHgHh6EuwNtTa1TbwvaAjnmAgAAAAADEAAAAAQUZm52OkZDM0U5RDkxQzIzREJBNDYFBkFTRUEwMQ\n\n      }' \\\n  https://api.bmob.cn/1/installations\n\n\n\n\n订阅频道和退订\n\n\n频道列的本质是一个数组，因此其操作与数组一致，具体可查看以下举例。\n\n\n订阅频道\n\n\n覆盖已订阅的频道：\n\n\ncurl -X PUT \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nchannels\n: [\n          \nGiants\n,\n          \nMets\n\n        ]\n      }' \\\n  https://api.bmob.cn/1/installations/mrmBZvsErB\n\n\n\n\n订阅一个新频道，不覆盖已订阅的频道：\n\n\ncurl -X PUT \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\nchannels\n:{\n__op\n:\nAddUnique\n,\nobjects\n:[\nGiants\n]}}' \\\n  https://api.bmob.cn/1/installations/mrmBZvsErB\n\n\n\n\n退订频道\n\n\ncurl -X PUT \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\nchannels\n:{\n__op\n:\nRemove\n,\nobjects\n:[\nGiants\n，\nMets\n]}}' \\\n  https://api.bmob.cn/1/installations/mrmBZvsErB\n\n\n\n\n推送消息\n\n\n请求描述\n\n\n使用推送接口可将消息推送至对应设备。\n\n\n请求\n\n\n\n\n\n\nurl ： https://api.bmob.cn/1/push\n\n\n\n\n\n\nmethod ：POST\n\n\n\n\n\n\nheader:\n\n\n\n\n\n\nX-Bmob-Application-Id: Your Application ID\nX-Bmob-REST-API-Key: Your REST API Key\nContent-Type: application/json\n\n\n\n\n\n\nbody: 根据不同的需求进行定制，具体看以下介绍。\n\n\n\n\n广播推送消息\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \ndata\n: {\n          \nalert\n: \nHello From Bmob.\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n组播推送消息\n\n\n发送给订阅了Giants频道的用户\n\n\n curl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n:{\n          \nchannels\n:[\nGiants\n]\n        },\n        \ndata\n: {\n          \nalert\n: \nHello From Bmob.\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n或者更简便的方式\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nchannels\n:[\nGiants\n],\n        \ndata\n: {\n          \nalert\n: \nHello From Bmob.\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n多播推送消息\n\n\n推送给不活跃的用户\n\n\n  curl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n:{\n            \nupdatedAt\n:{\n                \n$lt\n:{\n__type\n:\nDate\n,\niso\n:\n2012-01-29 11:33:53\n}\n              }\n        },\n        \ndata\n: {\n            \nalert\n: \nHello From Bmob.\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n根据查询条件做推送\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \nscores\n: true\n        },\n        \ndata\n: {\n          \nalert\n: \nWillie Hayes injured by own pop fly.\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n请注意，where 条件查询的都是 installations 表。这里是假设 installations 表存储了 scores 的布尔属性，你可以像查询普通对象一样构造where查询\n\n\n根据平台做推送\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \ndeviceType\n: \nandroid\n\n        },\n        \ndata\n: {\n          \nalert\n: \nYour suitcase has been filled with tiny robots!\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \ndeviceType\n: \nios\n\n        },\n        \ndata\n: {\n          \nalert\n: \nYour suitcase has been filled with tiny apples!\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\nWindows Phone平台的推送分三种格式：\n\n\na.推送Raw通知(\n默认\n)：\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \ndeviceType\n: \nwindows phone\n\n        },\n        \ndata\n: {\n           \nalert\n: \nYour suitcase has been filled with tiny windows phone!\n,\n           \nwpAlert\n: \nTextBoxValue2\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\nb.推送Toast通知：\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \ndeviceType\n: \nwindows phone\n\n        },\n        \ndata\n: {\n          \nalert\n: \nYour suitcase has been filled with tiny apples!\n,\n          \nwpAlert\n: \nTextBoxSubTitle\n,\n          \nwp\n: 2\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\nc.推送磁贴通知：\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \ndeviceType\n: \nwindows phone\n\n        },\n        \ndata\n: {\n          \nalert\n: \nYour suitcase has been filled with tiny apples!\n,\n          \nbackgroundImage\n: \nbackgroundImage\n,\n          \ncount\n:\n1\n,\n          \nbackBackgroundImage\n: \nbackBackgroundImage\n,\n          \nbackTitle\n:\nbackTitle\n,\n          \nbackContent\n:\nbackContent\n,\n          \nwp\n: 1\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n根据地理信息位置做推送\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n: {\n          \nuser\n: {\n            \n$inQuery\n: {\n              \nlocation\n: {\n                \n$nearSphere\n: {\n                  \n__type\n: \nGeoPoint\n,\n                  \nlatitude\n: 30.0,\n                  \nlongitude\n: -20.0\n                },\n                \n$maxDistanceInMiles\n: 1.0\n              }\n            }\n          }\n        },\n        \ndata\n: {\n          \nalert\n: \nFree hotdogs at the bmob concession stand!\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n上面的例子假设 installation 有个 user 属性指向_User 表的记录，并且用户有个 location 属性是 GeoPoint 类型，我们就可以根据地理信息位置做推送。\n\n\n点播推送消息\n\n\n发送给Android单个客户端\n\n\n  curl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n:{\n            \ninstallationId\n:\n57234d4c-752f-4e78-81ad-a6d14048020d\n\n        },\n        \ndata\n: {\n          \nalert\n: \nHello From Bmob.\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n发送给iOS单个客户端\n\n\n  curl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n:{\n            \ndeviceToken\n:\nabcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789\n\n         },\n        \ndata\n: {\n          \naps\n:{\nalert\n:\ncashi\n,\nbadge\n:1,\nsound\n:\ndefault\n}\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n发送给Windows Phone单个客户端Toast通知\n\n\n  curl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nwhere\n:{\n            \nnotificationUri\n:\nhttps://hk1.notify.live.net/unthrottledthirdparty/01.00/AQHgHh6EuwNtTa1TbwvaAjnmAgAAAAADEAAAAAQUZm52OkZDM0U5RDkxQzIzREJBNDYFBkFTRUEwMQ\n\n         },\n        \ndata\n: {\n          \nalert\n: \nHello From bmob\n,\n          \nwpAlert\n: \nbmob\n,\n          \nwp\n: 2\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n发送选项设置\n\n\n推送通知不仅仅可以用来发送消息，iOS中，推送内容还可以包含要播放的声音和要显示的badge数字值,还可以定制任何你想发送的内容，对于Android，你甚至可以指定Intent应用于接收消息，对于时效有要求的消息你还可以设置一个消息过期时间。\n\n\n定制你的通知\n\n\n如果你想发送更多的消息，你可以在data的字典对象中设置其他字段，下面这些保留的字段有其特殊的意义：\n- \nalert\n : 通知的消息内容\n- \nbadge\n : (仅iOS)一个数字值将会高亮显示在应用图标的右上角。\n- \nsound\n : (仅iOS)应用绑定包中的声音\n- \ncontent-available\n : (仅iOS)如果你的应用是新闻类的，或者你的应用正在使用iOS7的Remote Notification Background Mode，设定这个值为1将会触发离线下载功能。\n- \naction\n : (仅Android)接收到推送消息时应用Intent，如果没有指定title或alert，Intent将被应用，但是没有通知呈现给用户。\n- \ntitle\n : (仅Android)这个值将显示在系统通知栏\n- \nwp\n : (仅Windows Phone)通知类型 0-Raw(默认) 1-Toast 2-磁贴\n- \nwpAlert\n : (仅Windows Phone)这个值将在Raw 和 Toast两种通知中有用，相对alert，作为子标题\n- \nbackgroundImage\n : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n- \ncount\n : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n- \nbackBackgroundImage\n : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n- \nbackTitle\n : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n- \nbackContent\n : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n\n\n例如，推送一条通知，将当前的badge值设置为一个数字值,并且播放iOS设备上定制的音乐，对于Android用户，将在系统通知栏中显示特殊的标题，其请求如下：\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nchannels\n: [\n          \nMets\n\n        ],\n        \ndata\n: {\n          \nalert\n: \nThe Mets scored! The game is now tied 1-1.\n,\n          \nbadge\n: 10,\n          \nsound\n: \ncheering.caf\n,\n          \ntitle\n: \nMets Score!\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n当然，你也可以在data字典对象中定制自己的字段来推送消息，但推送到消息不显示在 Andoid 系统的通知栏中，而是执行应用程序预定义的逻辑，Android或iOS的接收消息文档中对此有说明，iOS只有当用户从通知中打开应用，才能访问data的数据，Android将提供这个数据在action Intent应用之后将提供这个数据,\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nchannels\n: [\n          \nIndians\n\n        ],\n        \ndata\n: {\n          \naction\n: \ncom.example.UPDATE_STATUS\n,\n          \nalert\n: \nRicky Vaughn was injured in last night's game!\n,\n          \nname\n: \nVaughn\n,\n          \nnewsItem\n: \nMan bites dog\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n设置消息过期时间\n\n\n过期时间，可以是绝对时间：\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \nexpiration_time\n: \n2013-12-04 00:51:13\n,\n        \ndata\n: {\n          \nalert\n: \nSeason tickets on sale until December  4, 2013\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push\n\n\n\n\n也可以是相对时间（根据push_time做定期推送，从push_time时间开始算起，直到expiration_interval时间后过期），下面的请求表示消息将在2012-01-28 00:51:13这个时间点开始推送，直到7天后过期:\n\n\ncurl -X POST \\\n  -H \nX-Bmob-Application-Id: Your Application ID\n          \\\n  -H \nX-Bmob-REST-API-Key: Your REST API Key\n        \\\n  -H \nContent-Type: application/json\n \\\n  -d '{\n        \npush_time\n: \n2012-01-28 00:51:13\n,\n        \nexpiration_interval\n: 518400,\n        \ndata\n: {\n          \nalert\n: \nSeason tickets on sale until December  4, 2013\n\n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "开发文档"
        }, 
        {
            "location": "/index.html#_1", 
            "text": "推送通知是让用户及时被通知、和你的应用保持联系的一种非常棒的方式，你可以快速而有效地通知到所有的用户，下面这个教程将会教你如何使用Bmob来推送消息。", 
            "title": "消息推送简介"
        }, 
        {
            "location": "/index.html#_2", 
            "text": "每一个Bmob的App被安装在用户的设备上后，如果要使用消息推送功能，Bmob SDK会自动生成一个Installation对象。Installation对象包含了推送所需要的所有信息。举例：一个棒球的App，你可以让用户订阅感兴趣的棒球队，然后及时将这个球队的消息推送给用户 。\n你可以使用 REST API，通过请求URL  /1/installations  对Installation对象进行一系列操作，就像你存储和获取其他的普通对象，如GameScore对象一样。\n注意Installation对象一般只在Client SDK中进行修改，但REST API对于大量导入或导出订阅数据的Installation对象是极其有用的。  Installation对象有几个系统默认的特殊字段来帮助你进行定位到设备等管理：\n-  badge  : iOS应用中右上角的图标标识，这不会在服务端进行自增，需要开发者自己实现自增统计\n-  channels  : 当前这个设备订阅的渠道名称数组\n-  timeZone  : 设备所在位置的时区， 如Asia/Shanghai，这个会在每个Installation对象更新时同步（只读）\n-  deviceType  : 设备的类型, 值为：\"ios\" 或 \"android\" (只读)\n-  installationId  : Bmob使用的设备唯一号，Android设备是必须的，iOS可选 (只读)\n-  deviceToken  : iOS设备由Apple APNS生成的唯一性token标识 (只读)\n-  notificationUri  : Windows Phone设备由Windows Push Center生成的唯一性token标识", 
            "title": "安装消息推送服务"
        }, 
        {
            "location": "/index.html#installation", 
            "text": "根据设备的不同往设备表中添加不同的值，body格式如下  {\n   deviceType : deviceType ( iOS , android ,  windows phone )\n   deviceToken : iOS需填\n   installationId :android需填\n   notificationUri :wp需填\n}  下面将针对具体平台分别举例。", 
            "title": "保存 installation"
        }, 
        {
            "location": "/index.html#iosdevicetoken", 
            "text": "iOS设备通常使用deviceToken来对一台设备进行惟一标识。  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         deviceType :  ios ,\n         deviceToken :  abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789 \n      }' \\\n  https://api.bmob.cn/1/installations", 
            "title": "保存iOS设备的deviceToken"
        }, 
        {
            "location": "/index.html#android-installationid", 
            "text": "对于Android设备， Bmob SDK会自动生成uuid作为installationId保存到 Bmob。 你可以使用以下REST API保存Android设备的installation ID。  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         deviceType :  android ,\n         installationId :  12345678-4312-1234-1234-1234567890ab \n      }' \\\n  https://api.bmob.cn/1/installations", 
            "title": "保存Android设备的 installationId"
        }, 
        {
            "location": "/index.html#windows-phone-notificationuri", 
            "text": "对于Windows Phone设备， Bmob SDK会自动从Windows Push Center获取到notificationUri并保存到 Bmob。 你可以使用以下REST API保存Windows Phone设备的notificationUri。  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         deviceType :  windows phone ,\n         notificationUri :  https://hk1.notify.live.net/unthrottledthirdparty/01.00/AQHgHh6EuwNtTa1TbwvaAjnmAgAAAAADEAAAAAQUZm52OkZDM0U5RDkxQzIzREJBNDYFBkFTRUEwMQ \n      }' \\\n  https://api.bmob.cn/1/installations", 
            "title": "保存Windows Phone设备的 notificationUri"
        }, 
        {
            "location": "/index.html#_3", 
            "text": "频道列的本质是一个数组，因此其操作与数组一致，具体可查看以下举例。", 
            "title": "订阅频道和退订"
        }, 
        {
            "location": "/index.html#_4", 
            "text": "覆盖已订阅的频道：  curl -X PUT \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         channels : [\n           Giants ,\n           Mets \n        ]\n      }' \\\n  https://api.bmob.cn/1/installations/mrmBZvsErB  订阅一个新频道，不覆盖已订阅的频道：  curl -X PUT \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{ channels :{ __op : AddUnique , objects :[ Giants ]}}' \\\n  https://api.bmob.cn/1/installations/mrmBZvsErB", 
            "title": "订阅频道"
        }, 
        {
            "location": "/index.html#_5", 
            "text": "curl -X PUT \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{ channels :{ __op : Remove , objects :[ Giants ， Mets ]}}' \\\n  https://api.bmob.cn/1/installations/mrmBZvsErB", 
            "title": "退订频道"
        }, 
        {
            "location": "/index.html#_6", 
            "text": "请求描述  使用推送接口可将消息推送至对应设备。  请求    url ： https://api.bmob.cn/1/push    method ：POST    header:    X-Bmob-Application-Id: Your Application ID\nX-Bmob-REST-API-Key: Your REST API Key\nContent-Type: application/json   body: 根据不同的需求进行定制，具体看以下介绍。", 
            "title": "推送消息"
        }, 
        {
            "location": "/index.html#_7", 
            "text": "curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         data : {\n           alert :  Hello From Bmob. \n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "广播推送消息"
        }, 
        {
            "location": "/index.html#_8", 
            "text": "发送给订阅了Giants频道的用户   curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where :{\n           channels :[ Giants ]\n        },\n         data : {\n           alert :  Hello From Bmob. \n        }\n      }' \\\n  https://api.bmob.cn/1/push  或者更简便的方式  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         channels :[ Giants ],\n         data : {\n           alert :  Hello From Bmob. \n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "组播推送消息"
        }, 
        {
            "location": "/index.html#_9", 
            "text": "", 
            "title": "多播推送消息"
        }, 
        {
            "location": "/index.html#_10", 
            "text": "curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where :{\n             updatedAt :{\n                 $lt :{ __type : Date , iso : 2012-01-29 11:33:53 }\n              }\n        },\n         data : {\n             alert :  Hello From Bmob. \n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "推送给不活跃的用户"
        }, 
        {
            "location": "/index.html#_11", 
            "text": "curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           scores : true\n        },\n         data : {\n           alert :  Willie Hayes injured by own pop fly. \n        }\n      }' \\\n  https://api.bmob.cn/1/push  请注意，where 条件查询的都是 installations 表。这里是假设 installations 表存储了 scores 的布尔属性，你可以像查询普通对象一样构造where查询", 
            "title": "根据查询条件做推送"
        }, 
        {
            "location": "/index.html#_12", 
            "text": "curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           deviceType :  android \n        },\n         data : {\n           alert :  Your suitcase has been filled with tiny robots! \n        }\n      }' \\\n  https://api.bmob.cn/1/push  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           deviceType :  ios \n        },\n         data : {\n           alert :  Your suitcase has been filled with tiny apples! \n        }\n      }' \\\n  https://api.bmob.cn/1/push  Windows Phone平台的推送分三种格式：  a.推送Raw通知( 默认 )：  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           deviceType :  windows phone \n        },\n         data : {\n            alert :  Your suitcase has been filled with tiny windows phone! ,\n            wpAlert :  TextBoxValue2 \n        }\n      }' \\\n  https://api.bmob.cn/1/push  b.推送Toast通知：  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           deviceType :  windows phone \n        },\n         data : {\n           alert :  Your suitcase has been filled with tiny apples! ,\n           wpAlert :  TextBoxSubTitle ,\n           wp : 2\n        }\n      }' \\\n  https://api.bmob.cn/1/push  c.推送磁贴通知：  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           deviceType :  windows phone \n        },\n         data : {\n           alert :  Your suitcase has been filled with tiny apples! ,\n           backgroundImage :  backgroundImage ,\n           count : 1 ,\n           backBackgroundImage :  backBackgroundImage ,\n           backTitle : backTitle ,\n           backContent : backContent ,\n           wp : 1\n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "根据平台做推送"
        }, 
        {
            "location": "/index.html#_13", 
            "text": "curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where : {\n           user : {\n             $inQuery : {\n               location : {\n                 $nearSphere : {\n                   __type :  GeoPoint ,\n                   latitude : 30.0,\n                   longitude : -20.0\n                },\n                 $maxDistanceInMiles : 1.0\n              }\n            }\n          }\n        },\n         data : {\n           alert :  Free hotdogs at the bmob concession stand! \n        }\n      }' \\\n  https://api.bmob.cn/1/push  上面的例子假设 installation 有个 user 属性指向_User 表的记录，并且用户有个 location 属性是 GeoPoint 类型，我们就可以根据地理信息位置做推送。", 
            "title": "根据地理信息位置做推送"
        }, 
        {
            "location": "/index.html#_14", 
            "text": "发送给Android单个客户端    curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where :{\n             installationId : 57234d4c-752f-4e78-81ad-a6d14048020d \n        },\n         data : {\n           alert :  Hello From Bmob. \n        }\n      }' \\\n  https://api.bmob.cn/1/push  发送给iOS单个客户端    curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where :{\n             deviceToken : abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789 \n         },\n         data : {\n           aps :{ alert : cashi , badge :1, sound : default }\n        }\n      }' \\\n  https://api.bmob.cn/1/push  发送给Windows Phone单个客户端Toast通知    curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         where :{\n             notificationUri : https://hk1.notify.live.net/unthrottledthirdparty/01.00/AQHgHh6EuwNtTa1TbwvaAjnmAgAAAAADEAAAAAQUZm52OkZDM0U5RDkxQzIzREJBNDYFBkFTRUEwMQ \n         },\n         data : {\n           alert :  Hello From bmob ,\n           wpAlert :  bmob ,\n           wp : 2\n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "点播推送消息"
        }, 
        {
            "location": "/index.html#_15", 
            "text": "推送通知不仅仅可以用来发送消息，iOS中，推送内容还可以包含要播放的声音和要显示的badge数字值,还可以定制任何你想发送的内容，对于Android，你甚至可以指定Intent应用于接收消息，对于时效有要求的消息你还可以设置一个消息过期时间。", 
            "title": "发送选项设置"
        }, 
        {
            "location": "/index.html#_16", 
            "text": "如果你想发送更多的消息，你可以在data的字典对象中设置其他字段，下面这些保留的字段有其特殊的意义：\n-  alert  : 通知的消息内容\n-  badge  : (仅iOS)一个数字值将会高亮显示在应用图标的右上角。\n-  sound  : (仅iOS)应用绑定包中的声音\n-  content-available  : (仅iOS)如果你的应用是新闻类的，或者你的应用正在使用iOS7的Remote Notification Background Mode，设定这个值为1将会触发离线下载功能。\n-  action  : (仅Android)接收到推送消息时应用Intent，如果没有指定title或alert，Intent将被应用，但是没有通知呈现给用户。\n-  title  : (仅Android)这个值将显示在系统通知栏\n-  wp  : (仅Windows Phone)通知类型 0-Raw(默认) 1-Toast 2-磁贴\n-  wpAlert  : (仅Windows Phone)这个值将在Raw 和 Toast两种通知中有用，相对alert，作为子标题\n-  backgroundImage  : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n-  count  : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n-  backBackgroundImage  : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n-  backTitle  : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用\n-  backContent  : (仅Windows Phone)通知类型wp=2，磁贴类通知中有用  例如，推送一条通知，将当前的badge值设置为一个数字值,并且播放iOS设备上定制的音乐，对于Android用户，将在系统通知栏中显示特殊的标题，其请求如下：  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         channels : [\n           Mets \n        ],\n         data : {\n           alert :  The Mets scored! The game is now tied 1-1. ,\n           badge : 10,\n           sound :  cheering.caf ,\n           title :  Mets Score! \n        }\n      }' \\\n  https://api.bmob.cn/1/push  当然，你也可以在data字典对象中定制自己的字段来推送消息，但推送到消息不显示在 Andoid 系统的通知栏中，而是执行应用程序预定义的逻辑，Android或iOS的接收消息文档中对此有说明，iOS只有当用户从通知中打开应用，才能访问data的数据，Android将提供这个数据在action Intent应用之后将提供这个数据,  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID  \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key  \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         channels : [\n           Indians \n        ],\n         data : {\n           action :  com.example.UPDATE_STATUS ,\n           alert :  Ricky Vaughn was injured in last night's game! ,\n           name :  Vaughn ,\n           newsItem :  Man bites dog \n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "定制你的通知"
        }, 
        {
            "location": "/index.html#_17", 
            "text": "过期时间，可以是绝对时间：  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         expiration_time :  2013-12-04 00:51:13 ,\n         data : {\n           alert :  Season tickets on sale until December  4, 2013 \n        }\n      }' \\\n  https://api.bmob.cn/1/push  也可以是相对时间（根据push_time做定期推送，从push_time时间开始算起，直到expiration_interval时间后过期），下面的请求表示消息将在2012-01-28 00:51:13这个时间点开始推送，直到7天后过期:  curl -X POST \\\n  -H  X-Bmob-Application-Id: Your Application ID           \\\n  -H  X-Bmob-REST-API-Key: Your REST API Key         \\\n  -H  Content-Type: application/json  \\\n  -d '{\n         push_time :  2012-01-28 00:51:13 ,\n         expiration_interval : 518400,\n         data : {\n           alert :  Season tickets on sale until December  4, 2013 \n        }\n      }' \\\n  https://api.bmob.cn/1/push", 
            "title": "设置消息过期时间"
        }, 
        {
            "location": "/module/common_problem/README/index.html", 
            "text": "常见问题\n\n\nQ:推送服务采用的协议是什么\nA: \nWebsocket\n\n\n\n\nQ:会不会限制推送消息的数量\nA:没有限制！\n\n\n推送的用户数量没有限制，每天推送的消息条数也没有限制，所有都没有限制。\n\n\n\n\nQ:服务器能支撑的长连接有多大\nA:Bmob的推送服务器是耗内存型的，保持1个长连接占用\n10KB的内存，64GB的内存能够支撑600万用户的长连接。\n\n\n\n\nQ:Android推送收不到消息\nA:\n1.手机是否连入网络 \n\n2.包名（应用包名，看配置文件）是否正确填写在web后台中  \n\n\n如果还是不能接收到推送，请检查：  \n\n\n3.手机是否有bmob的推送后台在运行\n\n4.后台的Installation表有没有该手机对应的设备信息\n\n\n\n\nQ:iOS推送接收不到消息\nA:\niOS的推送都是用apns。你确认是否操作了几点：\n\n1.检查推送的代码是否写错; \n\n2.真机操作；\n\n3.Bmob后台上传了未加密的p12证书； \n\n4.Bmob数据后台的Installation表是否可以看到对应数据。\n\n5.push token是否保存到服务器了\n\n\n\n\nQ:推送的耗电和耗流量情况怎样\nA:\n以下说到的，不考虑推送的内容部分。推送内容的多少是由开发者决定的。\n\n\n另外，实测电量、流量消耗，与网络状况相关比较大。\n\n\n所以这里的数据是理论平均值：流量消耗 50K/天，电量消耗 60mAh/天。\n\n\n\n\nQ:可以推送富文本到客户端吗\nA:不直接支持文件的推送，但可以通过推送 url 来实现。\n即先推送文件下载 url，到客户端触发逻辑来通过 url 下载文件。\n\n\n\n\nQ:iOS在服务端如何推送有声音和Badge提示\nA:需要开发者自己定义JSON格式，格式如下：\n\n\n{\n    \nalert\n : \nYou got your emails.\n,\n    \nbadge\n : 9,\n    \nsound\n : \nbingbong.aiff\n\n}", 
            "title": "常见问题"
        }, 
        {
            "location": "/module/common_problem/README/index.html#_1", 
            "text": "Q:推送服务采用的协议是什么\nA:  Websocket   Q:会不会限制推送消息的数量\nA:没有限制！  推送的用户数量没有限制，每天推送的消息条数也没有限制，所有都没有限制。   Q:服务器能支撑的长连接有多大\nA:Bmob的推送服务器是耗内存型的，保持1个长连接占用 10KB的内存，64GB的内存能够支撑600万用户的长连接。   Q:Android推送收不到消息\nA:\n1.手机是否连入网络  \n2.包名（应用包名，看配置文件）是否正确填写在web后台中    如果还是不能接收到推送，请检查：    3.手机是否有bmob的推送后台在运行 \n4.后台的Installation表有没有该手机对应的设备信息   Q:iOS推送接收不到消息\nA:\niOS的推送都是用apns。你确认是否操作了几点： \n1.检查推送的代码是否写错;  \n2.真机操作； \n3.Bmob后台上传了未加密的p12证书；  \n4.Bmob数据后台的Installation表是否可以看到对应数据。 \n5.push token是否保存到服务器了   Q:推送的耗电和耗流量情况怎样\nA:\n以下说到的，不考虑推送的内容部分。推送内容的多少是由开发者决定的。  另外，实测电量、流量消耗，与网络状况相关比较大。  所以这里的数据是理论平均值：流量消耗 50K/天，电量消耗 60mAh/天。   Q:可以推送富文本到客户端吗\nA:不直接支持文件的推送，但可以通过推送 url 来实现。\n即先推送文件下载 url，到客户端触发逻辑来通过 url 下载文件。   Q:iOS在服务端如何推送有声音和Badge提示\nA:需要开发者自己定义JSON格式，格式如下：  {\n     alert  :  You got your emails. ,\n     badge  : 9,\n     sound  :  bingbong.aiff \n}", 
            "title": "常见问题"
        }
    ]
}